$hero-variations: ".hero-shade, .hero-blur, .hero-fade, .hero-gradient";

:is(#{$hero-variations}) {

    --_effect-intensity: unset;
    --_effect-color: unset;

    position: relative;
}

:is(div, section):is(.hero, #{$hero-variations}) {
    --bg-img-url: url(https://images.unsplash.com/photo-1528353518104-dbd48bee7bc4?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1332&q=80);
    --bg-img-size: cover;
    --bg-img-repeat: no-repeat;
    --bg-img-pos: center;

    --_hero-content-pos: center;

    display: grid;
    place-items: center;
    align-content: center;
    grid-auto-rows: min-content;
    justify-content: center;

    width: var(--w-full);
    height: var(--h-screen);

    background-color: var(--background);
    background-image: var(--bg-img-url);
    background-size: var(--bg-img-size);
    background-repeat: var(--bg-img-repeat);
    background-position: var(--bg-img-pos);

    text-align: center;

    & section {
        
        z-index: 1;

        /* display: grid;
        grid-template-columns: 10% repeat(4, 1fr) 10%; */

        width: clamp(10px, 50%, 56rem);
        height: auto;
        margin-inline: auto;
        margin-block: 0;


        & :is(h1, h2, p) {
    
            --font-size: var(--hg);
            margin: 0;
            grid-column: 1 / 3;
        }
    
        & h1 {
            font-size: calc(var(--font-size) / 2);
            color: var(--accent);

            --spacing: 0;
        }
    
        & h2 {
            --_spacing-y: var(--md);
            font-size: calc(var(--font-size) / 6);
            margin-block-end: var(--_spacing-y);
        }
    
        & p {
    
            font-size: calc(var(--font-size) / 10);
            margin-block-end: var(--lg);
        }
    }

}

:is(div, section).hero {

    :is(&-shade, &-gradient)::before {

        content: "";
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
    }

    &-shade {

        --_effect-intensity: 45%;
        --_effect-color: 0, 0, 0,;
        
        &::before {
        
            background-color: rgba(var(--_effect-color) var(--_effect-intensity));
        }
    }

    &-blur {

        --_effect-intensity: var(--md); 

        filter: blur(var(--_effect-intensity));
    }

    &-gradient {

        --_effect-intensity: 20%;
        --_effect-color: var(--background);

        &::before {

            background-image: linear-gradient(
                to bottom,
                var(--_effect-color) var(--_effect-intensity),
                transparent 
            );
        }
    }
}