@use "../abstracts/mixins";

// Form Related -------------------------------------

form:invalid {
    
    input:invalid {
        border: .2rem var(--destructive) solid;

        transition: border-color var(--transition);
    }
}

// Input and Labels ----------------------------------

// Sets the default behavior

input, 
label, 
textarea {

    // Common vars
    --_spacing-y: var(--md);
    --_spacing-x: var(--lg);

    cursor: pointer;
    transition: background-color var(--transition), filter var(--transition);
}

input,
textarea {

    padding-block: var(--_spacing-y);
    padding-inline: var(--_spacing-x);
}

textarea {

    background-color: var(--muted-primary);
    border: .2rem solid var(--primary);
    resize: none;
    font-family: var(--font-family);
    font-size: var(--font-size);
    outline: none;

    &:hover {

        outline: none;
    }

    &:active {
        outline: none;
    }

    &:focus-visible {

        outline: var(--outline);
    }
}

// Label -----------------------------------------------

label,
label:not([role="button"]) {

    --spacing-y: var(--sm);
    --spacing-x: var(--md);

    --width: 100%;

    margin-inline: 0;

    width: fit-content;
    height: fit-content;

    display: flex;
    gap: var(--spacing-y);
    align-items: center;

    // Styles the label that has a input file as child
    &:has( > input[type="file"]) {

        --width: var(--w-full, 100%);
        --height: calc(32vmin + 5vw);
        --font-weight: 600;

        font-weight: var(--font-weight);
        vertical-align: center;
        display: flex;
        align-items: center;
        word-wrap: break-word;
        justify-content: center;
        border: .1rem dashed var(--text);
        width: var(--width);
        height: var(--height);

        // Padding inline and block

        padding: var(--spacing-y) var(--spacing-x);
        text-align: center;
        transition: background-color .2s ease, filter .4s ease-in;
        position: relative;

        --_effect-level: 0%;
    
        &:hover {
            background-color: var(--accent);
        }

        &:active {
            filter: var(--effect-bright);
        }
    }

    // When focusing in the input, styles the label to pretend they're the same

    &:has(> input[type="file"]:focus-visible) {
        --outline: var(--outline-md);

        outline-offset: var(--outline-offset);

        outline: var(--outline);
    }

    // Styles a label that has a input color
    &:has( > input[type="color"]) {
        display: flex;
        align-items: center;
    }

    // Label that has the checkbox

    &:has( > input[type="checkbox"] + span:empty) {
        // as
    }
}

// Styles the input itself

input, select {
    --spacing: var(--md);
    --roundness: .24vmin;
    --bg: var(--muted-primary);
    --font-size: 1.50rem;
    --width: 100%;

    font-weight: 500;

    font-size: var(--font-size);
    border: .2rem solid var(--foreground-accent);
    background-color: var(--bg);
    border-radius: var(--roundness);
    outline: none;

    transition: all var(--transition);

    /* &:focus {

        border-color: var(--accent);
    } */

    &::placeholder {
        --text-color: var(--muted-text);

        color: var(--text-color);
    }

    // Removing Style from Selected Types
    // PRESET

    &:is([type="color"], [type="date"], [type="radio"], [type="checkbox"], [type="range"] ) {
        -moz-appearance: none;
        -webkit-appearance: none;
        appearance: none;
        accent-color: var(--accent);
    }

    // Radio Input -----------------------------------------------------

    &[type="radio"] {
        border-radius: 50%;
        padding: .2vmin;
        display: grid;
        place-items: center;
        
        &::after {
            content: "";
            display: block;
            scale: 0;
            width: .8em;
            border-radius: inherit;
            aspect-ratio: 1 / 1;
            background-color: var(--accent);
            transition: scale .2s var(--transition-out-circle);
        }

        &:checked::after {
            scale: 1;
        }
    }

    // A radio and checkbox common style
    &:is([type="checkbox"], [type="radio"]) {
        --spacing: var(--sm);
    }

    // File Input --------------------------------------------------------

    &[type="file"] {
        position: absolute;
        inset: 0;
        z-index: -20;
        opacity: 0;

        &:focus-visible {
            all: none
        }
    }

    // Color Input --------------------------------------------------------

    &[type="color"] {

        --width: 2.4vmax;

        --bg: transparent;

        padding: 0;
        margin: 0;
        border: none;
        overflow: hidden;
        
        aspect-ratio: 1 / 1;
        
        width: max(var(--width), 2.4vmin);
        border-radius: var(--roundness);
        background-color: var(--bg, transparent);
        
        &::-webkit-color-swatch {
            border-radius: var(--roundness);
            border: .1rem var(--blend-back-color) solid;
        }

        &:is(:active, :focus)::-webkit-color-swatch {
            border: .2rem var(--text) solid;
        }

        transition: border .2s ease;
    }

    // Check Box

    &[type="checkbox"]:not([role="switch"]) {

        overflow: hidden;
        position: relative;

        &:checked::after {
            scale: 45%;
        }

        &::after {
            content: "";

            --borderWidth: .6rem;
            --height: 2em;
            --width: 1em;
            --borderColor: var(--accent);

            position: absolute;
            inset: 0;
            
            transform: rotate(40deg) translate(-65%, -50%);
            height: var(--height);
            width: var(--width);
            scale: 0;
            border-bottom: var(--borderWidth) solid var(--borderColor);
            border-right: var(--borderWidth) solid var(--borderColor);

            transition: inherit;
        }
    }

    // Date Input

    &[type="date"], &[type="time"], &[type="datetime-local"] {
        --bg: var(--primary);
        --text-color: var(--text);
        --font-weight: 500;

        display: inline-flex;
        align-items: center;
        text-align: center;
        vertical-align: center;
        background-color: var(--bg);
        color: var(--text-color);
        border: none;
        padding: .4vmin .8vmin;
        border-radius: var(--roundness);

        font-family: var(--font-family);
        font-weight: var(--font-weight);
        letter-spacing: .2ch;

        &:hover {
            --bg: var(--accent);
        }

        &:active {
            filter: brightness(125%);
        }

        &::-webkit-calendar-picker-indicator {
            background-color: var(--secondary);
            padding: .6vmin .8vmin;
            border-radius: var(--roundness);
            align-self: center;
            margin-top: 2.4%;
            cursor: pointer;
        }
    }

    // Radio

    &[type="radio"] {

        width: 200%;
    }


    // Range Input -------------------------------------------------

    &[type="range"] {
        --width: 100%;
        --bg: transparent;
        --roundness: 100vmax;
        --spacing: .4vmin;
    
        height: fit-content;
        padding: 0;
        width: var(--width); /* Corrected typo here */
        background-color: var(--bg, transparent);
        border-radius: var(--roundness);
    
        outline-offset: .2rem;
        // Styling the line track
    }

    &:is([type="checkbox"], [type="radio"]):focus-visible {

        --outline-offset: var(--outline-lg);

        outline-offset: var(--outline-offset);
        outline: var(--outline);
    }

    &[type="search"] {

        --spacing-x: var(--lg);

        --roundness: var(--round-peal);

        text-transform: capitalize;
        padding-inline: var(--spacing-x);
        position: relative;

        @include icon-background(var(--search-icon));
    }
}