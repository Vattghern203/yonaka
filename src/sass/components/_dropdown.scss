@use "../abstracts/mixins";

details[role="listbox"],
details[role="list"] {
    & > ul {
        --bg: var(--muted-primary);
        --border: var(--border-sm);
        --width: var(--w-full);

        background-color: var(--bg);
        padding: var(--spacing) 0;
        border: var(--border);
        display: flex;
        flex-direction: column;
        align-items: stretch;
        overflow-x: hidden;

        & li, & > * {
            text-transform: capitalize;
        }

        & li {
            --font-size: var(--md);
            --text-color: var(--text);
            --font-weight: 500;
            --bg: inherit;
            --roudness: 0;

            display: flex;
            align-items: center; /* Align items vertically if needed */
            width: 100%;
            font-size: var(--font-size);
            font-weight: var(--font-weight);
            color: var(--text-color);
            background-color: var(--bg);
            border-radius: var(--roudness);
            padding: var(--spacing);
            cursor: pointer;
            transition: background-color .4s ease, filter .2s ease-in;

            &:is(:hover, :focus, :focus-visible) {
                --bg: var(--primary);
            }

            &:has(> a:is(:focus, :focus-visible)) {

                --bg: var(--primary);
                --border: var(--border);
            }

            &:active {
                filter: var(--effect-bright);
            }

            & > a {
                --spacing-y: var(--sm);
                --spacing-x: var(--md);

                color: inherit;
                box-sizing: border-box;
                flex: 1; /* Allow the anchor tag to take up all available space */
                min-width: 0; /* Ensure it can shrink if needed */
                align-self: stretch;
                margin-inline: var(--spacing-x);
                padding-block: var(--spacing-y);
                border-radius: var(--roundness);

                &:focus-visible {
                    outline: none;
                }
            }
        }
    }
}

// SELECT

select {
    --font-size: var(--md);
    --text-color: var(--text);
    --font-weight: 500;

    cursor: pointer;

    appearance: none;
    width: 100%;
    
    font-family: var(--font-family);
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    text-transform: capitalize;

    background-image: var(--expand-icon);
    background-repeat: no-repeat;
    background-position: calc(100% - var(--spacing)) center;

    &::-ms-expand {
        display: none;
    }

    &:is(:hover, :focus, :focus-visible) {
        --bg: var(--primary);
    }

    &:focus-visible {
        --outline: var(--outline);

        outline: var(--outline);
    }

    @include icon(var(--expand-icon));
        
    &::after {
        rotate: -90deg;
        transition: rotate .4s var(--transition-out-back);
        z-index: -200;
        background-color: khaki;
    }

    /* &::after {
        content: "";
        width: 30em;
        height: 30em;
        background-color: var(--select-arrow);
        clip-path: polygon(100% 0%, 0 0%, 50% 100%);
        z-index: 2000;
    } */
    
    &, & > * {
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
    }
    
    & > option {
        --bg: var(--muted-primary);
        --border: var(--border-sm);

        color: var(--text-color);
        background-color: var(--bg);
        border-radius: 0;
        padding: var(--spacing);
        cursor: pointer;

        transition: background-color .4s ease, filter .2s ease-in;

        &:hover {
            --bg: var(--primary);
        }

        &:active {
            filter: var(--effect-bright);
        }
    }
}